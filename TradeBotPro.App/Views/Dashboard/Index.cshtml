@using TradeBotPro.App.Utilities;
@model TradeBotPro.App.Models.ViewModels.DashboardSummaryViewModel
@{
    ViewData["Title"] = "Dashboard Page";
}

<div id="container">
    <div class="row">
        <h3 class="mb-2">Dashboard</h3>
    </div>
    <div class="row">
        @if (User.IsInRole(UserRoles.SystemAdmin))
        {
            <div class="kpi-card orange">
                <span class="card-value">@Model.ClientCount</span>
                <span class="card-text">Clients</span>
                <i class="fas fa-building icon"></i>
            </div>
        }

        @if (User.IsInRoles(UserRoles.SystemAdmin, UserRoles.ClientAdmin))
        {
            <div class="kpi-card blue">
                <span class="card-value">@Model.UserCount</span>
                <span class="card-text">Users</span>
                <i class="fas fa-users icon"></i>
            </div>
        }

        <div class="kpi-card purple">
            <span class="card-value">@Model.TotalClosedOrders</span>
            <span class="card-text">Total Closed Orders</span>
            <i class="fas fa-infinity icon"></i>
        </div>

        <div class="kpi-card @(Model.NetProfit > 0 ? "green" : "red")">
            <span class="card-value">@Model.NetProfit</span>
            <span class="card-text">Total Profit</span>
            <i class="fas fa-money-bill icon"></i>
        </div>
    </div>
    <div class="row mt-5">
        <div class="col-md-6 col-sm-12">
            <div id="tradeCountByTradeType" style="height: 280px; width: 100%;"></div>
        </div>
        <div class="col-md-6 col-sm-12">
            <div id="tradeVolumeByTradeType" style="height: 280px; width: 100%;"></div>
        </div>
    </div>
    <div class="row mt-5">
        <div class="col-sm-12">
            <div id="yearlyProfit" style="height: 280px; width: 100%;"></div>
        </div>
    </div>
</div>

<script>
    window.onload = function () {
        renderChart('pie', 'tradeCountByTradeType', 'Number of Trades by Type', 'Overall', @Html.Raw(Model.TradeCountByTradeType));
        renderChart('pie', 'tradeVolumeByTradeType', 'Volume of Trades by Type', 'Overall', @Html.Raw(Model.TradeVolumeByTradeType));
        renderChart('line', 'yearlyProfit', 'Yearly Profit', 'Overall', @Html.Raw(Model.YearlyProfit));
    }

    function renderChart(chartType, chartId, title, subtitle, data) {
        var chart = new CanvasJS.Chart(chartId, {
            theme: "light1",
            exportEnabled: true,
            animationEnabled: true,
            title: {
                text: title
            },
            subtitles: [{
                text: subtitle
            }],
            data: [{
                type: chartType,
                startAngle: 180,
                toolTipContent: "<b>{label}</b>: {y}",
                showInLegend: "true",
                legendText: "{label}",
                indexLabel: "{label} - {y}",
                dataPoints: data
            }]
        });
        chart.render();
    }
</script>